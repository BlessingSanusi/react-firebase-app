{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authAction.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","logout","then","type","props","className","to","onClick","profile","initials","SignOutink","state","links","uid","SignOutLink","id","notify","borderRadius","Notifications","notifications","style","map","note","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","projectName","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","newProps","match","params","data","projectDescription","deadline","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credential","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","ProjectName","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.6abe705f.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\nconst SignInLink = (props) => {\r\n    \r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n    <li><NavLink to=\"/\" className=\"btn btn-floating deep-orange darken-3\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchProps) (SignInLink)","export const signIn = (credential) => {\r\n    return (dispatch, getState, { getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        // firebase.auth(signOut().then(\r\n        //     () => {\r\n        //         dispatch({ type: 'SIGNOUT SUCCESS'});\r\n        //     }\r\n        // ))\r\n\r\n        \r\n    firebase.auth().signOut()\r\n    firebase.logout() \r\n    .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n  \r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(res => {\r\n        return firestore.collection('users').doc(res.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName, \r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignOutink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutink","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport SignInLink from './SignInLink'\r\nimport SignOutLink from './SignOutLink'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const { auth, profile } = props;\r\n    // console.log(auth)\r\n    const links = auth.uid ? <SignInLink profile={profile} /> : <SignOutLink />\r\n    return (\r\n       \r\n        <nav className=\"nav-wrapper blue-grey darken-3\">\r\n            <div className=\"container\">\r\n            <Link to=\"/\" className=\"brand-logo left\">Project Manager</Link>\r\n            \r\n            <ul id=\"nav-mobile\" className=\"right hide-on-small-only\">\r\n            { links }\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   \r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nlet notify ={\r\n    borderRadius: '10px'\r\n}\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-1\" style={notify}>\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"notify\">\r\n                       { notifications && notifications.map(note=> {\r\n                       return (\r\n                           <li key={note.id}>\r\n                       <span className=\"deep-orange-text\">{note.user} </span>\r\n                       <span>{note.content}</span>\r\n                       <div className=\"grey-text note-date\">\r\n                           Created: {moment(note.time.toDate()).fromNow()}\r\n                       </div>\r\n                           </li>\r\n                       )\r\n                       })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        \r\n        \r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content  blue-grey lighten-5 grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.projectName}</span>\r\n                    <p>Posted by: {project.authorFirstName} {project.authorLastName}</p>\r\n                    <div>\r\n                    <p className=\"grey-text\">Created At: {moment(project.createdAt.toDate()).calendar()}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n   \r\n    )\r\n}\r\n\r\n\r\nexport default  ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n        { projects && projects.map(project => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          )\r\n        })}  \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Notification from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\n\r\nclass Dashboard extends Component {\r\n   \r\n    render() {\r\n        // console.log(this.props)\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid){\r\n            return <Redirect to='/signin' />\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"dashboard container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6\">\r\n                            <ProjectList projects={projects} />\r\n                        </div>\r\n                        <div className=\"div col s12 m5 offset-m1\">\r\n                            <Notification notifications ={notifications}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n    { collection: \"projects\", orderBy:['createdAt','desc']},\r\n    {collection: \"notifications\", limit: 5, orderBy:['time','desc']}\r\n    ])\r\n    )(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n\r\n    if(!auth.uid){\r\n        return <Redirect to ='/signin' />\r\n    }\r\n    \r\n    if (project){\r\nreturn (\r\n    <div className=\"container section project-details\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{ project.projectName} </span>\r\n    <p>{project.projectDescription}</p>\r\n  \r\n                </div>\r\n                <div className=\"card-action grey lighten-5 grey-text\">\r\n<div>Posted By: {project.authorFirstName} {project.authorLastName}</div>\r\n<div> <p className=\"bold\">Project Deadline: {project.deadline}</p></div>\r\n                    <div> <p className=\"grey-text\">Created At: {moment(project.createdAt.toDate()).calendar()}</p></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <h5>Your project is loading...</h5>\r\n                </div>\r\n            )\r\n    }\r\n\r\n \r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, newProps) => {\r\n\r\n    const id = newProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    \r\n\r\n    return{\r\n        // projects: projects[id]\r\n        // projects: state.firestore.data[projects] && state.firestore.data.projects[id]\r\n        project: project,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    \r\nconnect(mapStateToProps),\r\nfirestoreConnect(props => {\r\n\r\n    return [\r\n         { collection: \"projects\"},\r\n    ];\r\n})\r\n\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.signIn(this.state); \r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        // if (!auth.uid){\r\n        //     return <Redirect to ='/' />\r\n        // }\r\n        if (auth.uid) return <Redirect to='/' /> \r\n \r\n        return (\r\n\r\n            \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign In\r\n                    </h5>\r\n                    <div className=\"red-text\">\r\n                        { authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn deep-orange darken-3\">\r\n                            Log In\r\n                        </button>\r\n                    </div>\r\n                  \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n    }\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\nreturn{\r\n    signIn: (cred) => dispatch(signIn(cred))\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authAction'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign Up\r\n                    </h5>\r\n                    <div className=\"red-text\">\r\n                        { authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn deep-orange darken-3\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth,\r\n      authError: state.auth.authError\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n      signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        projectName: '',\r\n        projectDescription: '',\r\n        deadline: ''\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        // e.target.reset();\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n\r\n        const {auth} = this.props;\r\n\r\n        if (!auth.uid){\r\n            return <Redirect to ='/signin' />\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id=\"projectName\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"Project Name\">Project Name</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                    <textarea id=\"projectDescription\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"Project Description\">Project Description</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                    <input type=\"text\" id=\"deadline\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"Deadline\">Project Deadline</label>              \r\n                    </div>\r\n                   \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn deep-orange darken-3\">\r\n                           Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //async call to firebase database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n           ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n          }).catch(err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n          });\r\n        }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport SignUp from \"./components/auth/SignUp\"\r\nimport CreateProject from './components/projects/CreateProject'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path='/project/:id' component={ProjectDetails} />\r\n          <Route path='/signin' component={SignIn} />\r\n          <Route path='/signUp' component={SignUp} />\r\n          <Route path='/create' component={CreateProject} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n                return{\r\n                ...state,\r\n                authError: 'Login Failed: Invalid email or password'\r\n                    }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login successful');\r\n                return{\r\n                    ...state,\r\n                    authError: null\r\n                    }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout successful');\r\n                return state;\r\n            \r\n        \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup successful');\r\n                return{\r\n                      ...state,\r\n                    authError: null\r\n                }\r\n        \r\n            \r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup unsuccessful');\r\n                return {\r\n                    ...state,\r\n                    authError: action.err.message\r\n                };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n   \r\n} \r\n\r\nexport default authReducer;","const initState = {\r\nprojects: [\r\n    {id: '1', ProjectName:'React Redux', projectDescription:'Learning and contributing to new project using react and redux'},\r\n    {id: '2', ProjectName:'Office Christmas Party', projectDescription:'Coordinating and decorating the office for its christmas party'},\r\n    {id: '3', ProjectName:'Voluteering', projectDescription:'Volunteering at the homeless shelter with everyone at the office'},\r\n    {id: '4', ProjectName:'Debugging', projectDescription:'Debugging the react project with Jane Doe'}\r\n]\r\n\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('project created', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('an error occured', action.err)\r\n            return state;\r\n\r\n        default:\r\n            return state\r\n    }\r\n  \r\n} \r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyBeEVzxFxBZ9QK3ESCzOqG6GDk6rkEq2o0\",\r\n    authDomain: \"project-management-app-64fbb.firebaseapp.com\",\r\n    databaseURL: \"https://project-management-app-64fbb.firebaseio.com\",\r\n    projectId: \"project-management-app-64fbb\",\r\n    storageBucket: \"project-management-app-64fbb.appspot.com\",\r\n    messagingSenderId: \"190887272138\",\r\n    appId: \"1:190887272138:web:969ba3b33d783d560dde33\",\r\n    measurementId: \"G-V3FEGBQY2P\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  firebase.firestore().settings({ timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n        reactReduxFirebase(firebaseConfig,  {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\r\n        reduxFirestore(firebaseConfig) // redux bindings for firestore\r\n      )\r\n    );\r\n    \r\n    store.firebaseAuthIsReady.then(() => {\r\n      ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n      registerServiceWorker();\r\n    });\r\n\r\n\r\n"],"sourceRoot":""}